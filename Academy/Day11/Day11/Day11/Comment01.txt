클래스 기본 모토
1. 캡슐화
2. 상속
3. 추상화
4. 다형성

1. 캡슐화
 - 다른 곳에서 내 클래스 멤버변수를 수정하지 못하게 해라
 - 외부에 제공할것만 제공해라.

 - ★나머지는 내부에서 알아서 유기적으로 변하게 해줘라
    - 가장 쉬운 예시
    - 컴퓨터라는 클래스
       - 램, 파워, 모니터라는 변수
    - 부팅함수
         - 파워를 켜주고,
         - 파워에서 모니터한테 전력을 공급하고
         - 파워에서 램을 깨워주고
        

 - 외부로부터 데이터를 보호하는 것
 - 변수를 private나 protected로 만들라는 것

 - 그럼 변수를 수정하지 못함.
 - 변수 수정은 항상 클래스 내부에서 이루어져야함.

 -> 왜?

 - 객체지향 파일로 분리해서 유지보수를 편하게 하자
 -> 외부에서 수정을 하면
  - 우리 변수를 추가하고 제어하는데,
  - 그 클래스만 확인하는게 아니라 모든곳을 확인해줘야한다.
  - 어디에서든 그 변수가 바뀔수있기 때문에..

  코드 철학 측면에서도
   - 우리가 클래스라고 하면 객체를 정의하는건데
   
   예를들어, 몬스터를 만든다고 침.

   - 몬스터 Hp나 그런것들을 수정을 몬스터에서

   OnDanaged라는 함수에서 Hp 깍는 기능을 제어해야하지

   플레이어 클래스에서 몬스터를 가져와서 몬스터의 Hp를 