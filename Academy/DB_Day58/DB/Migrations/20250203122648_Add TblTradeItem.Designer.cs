// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(SbsDbContext))]
    [Migration("20250203122648_Add TblTradeItem")]
    partial class AddTblTradeItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DB.Tables.TblPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Gold")
                        .HasColumnType("int")
                        .HasComment("현재 보유 골드");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasComment("레벨");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasComment("이름");

                    b.HasKey("Id");

                    b.ToTable("TblPlayer");
                });

            modelBuilder.Entity("DB.Tables.TblPlayerItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasComment("Item 갯수");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasComment("Item의 실제 Id");

                    b.Property<int>("OwnerPlayerId")
                        .HasColumnType("int")
                        .HasComment("누가 가졌는지");

                    b.HasKey("Id");

                    b.HasIndex("OwnerPlayerId");

                    b.ToTable("TblPlayerItem");
                });

            modelBuilder.Entity("DB.Tables.TblTradeItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuyerPlayerId")
                        .HasColumnType("int")
                        .HasComment("누가 샀는지");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasComment("언제 올렸는지");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)")
                        .HasComment("언제 마감인지");

                    b.Property<int>("ListedPrice")
                        .HasColumnType("int")
                        .HasComment("얼마에 올렸는지");

                    b.Property<int>("SellerPlayerId")
                        .HasColumnType("int")
                        .HasComment("누가 올렸는지");

                    b.HasKey("Id");

                    b.HasIndex("BuyerPlayerId");

                    b.HasIndex("SellerPlayerId");

                    b.ToTable("TblTradeItem", t =>
                        {
                            t.HasComment("경매장에 올라간 아이템을 저장하는 Table");
                        });
                });

            modelBuilder.Entity("DB.Tables.TblPlayerItem", b =>
                {
                    b.HasOne("DB.Tables.TblPlayer", "OwnerPlayerIdNavigation")
                        .WithMany("TblPlayerItems")
                        .HasForeignKey("OwnerPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OwnerPlayerIdNavigation");
                });

            modelBuilder.Entity("DB.Tables.TblTradeItem", b =>
                {
                    b.HasOne("DB.Tables.TblPlayer", "BuyerPlayerIdNavigation")
                        .WithMany("BuyItems")
                        .HasForeignKey("BuyerPlayerId");

                    b.HasOne("DB.Tables.TblPlayer", "SellerPlayerIdNavigation")
                        .WithMany("SellItems")
                        .HasForeignKey("SellerPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerPlayerIdNavigation");

                    b.Navigation("SellerPlayerIdNavigation");
                });

            modelBuilder.Entity("DB.Tables.TblPlayer", b =>
                {
                    b.Navigation("BuyItems");

                    b.Navigation("SellItems");

                    b.Navigation("TblPlayerItems");
                });
#pragma warning restore 612, 618
        }
    }
}
